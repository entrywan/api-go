/*
Entrywan API

Manage Entrywan resources programmatically using the API.  All API requests are authenticated using [IAM tokens](https://entrywan.com/docs#iam).  Tokens can be generated and retrieved from the [portal](https://portal.entrywan.com).  The portal itself is an API client that uses an unrestricted token to access resources for an account.  This documentation is generated using an OpenAPI 3.1.0 [specification](https://spec.openapis.org/oas/latest.html).  More information about OpenAPI can be found on its [site](https://openapis.org).  The current version of [Entrywan's API spec](https://entrywan.com/openapi.yaml) is also available for inspection.  On the left of this page are links to the <i>Endpoints</i> grouped by tag and <i>Schemas</i> the API exposes.  <i>Endpoints</i> are URLs that can be accessed with any HTTP client or device. <i>Schemas</i> are machine-readable data models that represent resources.  To learn more, have a look at the [documentation](https://entrywan.com/docs).  If you have any questions, contact [support](mailto:support@entrywan.com) or your account representative.

API version: v1beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VpcIdPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpcIdPatchRequest{}

// VpcIdPatchRequest struct for VpcIdPatchRequest
type VpcIdPatchRequest struct {
	// Private IPv4 address of the member
	Ip4private string `json:"ip4private"`
}

type _VpcIdPatchRequest VpcIdPatchRequest

// NewVpcIdPatchRequest instantiates a new VpcIdPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpcIdPatchRequest(ip4private string) *VpcIdPatchRequest {
	this := VpcIdPatchRequest{}
	this.Ip4private = ip4private
	return &this
}

// NewVpcIdPatchRequestWithDefaults instantiates a new VpcIdPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpcIdPatchRequestWithDefaults() *VpcIdPatchRequest {
	this := VpcIdPatchRequest{}
	return &this
}

// GetIp4private returns the Ip4private field value
func (o *VpcIdPatchRequest) GetIp4private() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip4private
}

// GetIp4privateOk returns a tuple with the Ip4private field value
// and a boolean to check if the value has been set.
func (o *VpcIdPatchRequest) GetIp4privateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip4private, true
}

// SetIp4private sets field value
func (o *VpcIdPatchRequest) SetIp4private(v string) {
	o.Ip4private = v
}

func (o VpcIdPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpcIdPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ip4private"] = o.Ip4private
	return toSerialize, nil
}

func (o *VpcIdPatchRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ip4private",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpcIdPatchRequest := _VpcIdPatchRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVpcIdPatchRequest)

	if err != nil {
		return err
	}

	*o = VpcIdPatchRequest(varVpcIdPatchRequest)

	return err
}

type NullableVpcIdPatchRequest struct {
	value *VpcIdPatchRequest
	isSet bool
}

func (v NullableVpcIdPatchRequest) Get() *VpcIdPatchRequest {
	return v.value
}

func (v *NullableVpcIdPatchRequest) Set(val *VpcIdPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVpcIdPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVpcIdPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpcIdPatchRequest(val *VpcIdPatchRequest) *NullableVpcIdPatchRequest {
	return &NullableVpcIdPatchRequest{value: val, isSet: true}
}

func (v NullableVpcIdPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpcIdPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


