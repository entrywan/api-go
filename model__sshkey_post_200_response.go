/*
Entrywan API

Manage Entrywan resources programmatically using the API.  All API requests are authenticated using [IAM tokens](https://entrywan.com/docs#iam).  Tokens can be generated and retrieved from the [portal](https://portal.entrywan.com).  The portal itself is an API client that uses an unrestricted token to access resources for an account.  This documentation is generated using an OpenAPI 3.1.0 [specification](https://spec.openapis.org/oas/latest.html).  More information about OpenAPI can be found on its [site](https://openapis.org).  The current version of [Entrywan's API spec](https://entrywan.com/openapi.yaml) is also available for inspection.  On the left of this page are links to the <i>Endpoints</i> grouped by tag and <i>Schemas</i> the API exposes.  <i>Endpoints</i> are URLs that can be accessed with any HTTP client or device. <i>Schemas</i> are machine-readable data models that represent resources.  To learn more, have a look at the [documentation](https://entrywan.com/docs).  If you have any questions, contact [support](mailto:support@entrywan.com) or your account representative.

API version: v1beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SshkeyPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SshkeyPost200Response{}

// SshkeyPost200Response struct for SshkeyPost200Response
type SshkeyPost200Response struct {
	Id *string `json:"id,omitempty"`
}

// NewSshkeyPost200Response instantiates a new SshkeyPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshkeyPost200Response() *SshkeyPost200Response {
	this := SshkeyPost200Response{}
	return &this
}

// NewSshkeyPost200ResponseWithDefaults instantiates a new SshkeyPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshkeyPost200ResponseWithDefaults() *SshkeyPost200Response {
	this := SshkeyPost200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SshkeyPost200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshkeyPost200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SshkeyPost200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SshkeyPost200Response) SetId(v string) {
	o.Id = &v
}

func (o SshkeyPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SshkeyPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableSshkeyPost200Response struct {
	value *SshkeyPost200Response
	isSet bool
}

func (v NullableSshkeyPost200Response) Get() *SshkeyPost200Response {
	return v.value
}

func (v *NullableSshkeyPost200Response) Set(val *SshkeyPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSshkeyPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSshkeyPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshkeyPost200Response(val *SshkeyPost200Response) *NullableSshkeyPost200Response {
	return &NullableSshkeyPost200Response{value: val, isSet: true}
}

func (v NullableSshkeyPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshkeyPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


